<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-dependencies</artifactId>
    <version>2.7.0</version>
    <relativePath/>
  </parent>
  <groupId>tech.simter</groupId>
  <artifactId>simter-build</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>
  <name>simter-build</name>
  <description>Simter Build</description>
  <properties>
    <revision>3.0.0-M7</revision>
    <simter.version>3.0.0-M7</simter.version>
    <spring-boot.version>2.7.0</spring-boot.version>

    <!-- maven relative settings -->
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>
    <!--<maven.javadoc.skip>true</maven.javadoc.skip>-->
    <!--<source.skip>false</source.skip>-->
    <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
    <maven-project-info-reports-plugin.version>3.1.2</maven-project-info-reports-plugin.version>
    <maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
    <dokka-maven-plugin.version>1.5.0</dokka-maven-plugin.version>
    <flatten-maven-plugin.version>1.2.7</flatten-maven-plugin.version>
    <!-- others -->
    <dollar>$</dollar>
    <gpg.executable>gpg</gpg.executable>
  </properties>
  <modules>
    <module>simter-dependencies</module>
    <module>simter-parent</module>
    <module>simter-context</module>
    <module>simter-jwt</module>
    <module>simter-test</module>
    <module>simter-core</module>
    <module>simter-json</module>
    <module>simter-genson-ext</module>
    <module>simter-jpa-ext</module>
    <module>simter-jxls-ext</module>
    <module>simter-mongo-ext</module>
    <module>simter-jackson-javatime</module>
    <module>simter-jackson-jsonb</module>
    <module>simter-http</module>
    <module>simter-security</module>
    <module>simter-rest-jaxrs</module>
    <module>simter-rest-jaxrs-jersey</module>
    <module>simter-util</module>
    <module>simter-template</module>
    <module>simter-scheduling</module>
    <module>simter-exception</module>
    <module>simter-reactive-context</module>
    <module>simter-reactive-web</module>
    <module>simter-reactive-security</module>
    <module>simter-reactive-io</module>
    <module>simter-reactive-jpa</module>
    <module>simter-reactive-test</module>
    <module>simter-query</module>
    <module>simter-r2dbc-ext</module>
    <module>simter-kotlin</module>
    <module>simter-embedded-database-ext</module>
    <!-- <module>simter-demo</module> -->
  </modules>
  <url>https://github.com/simter/simter-build</url>
  <licenses>
    <license>
      <name>MIT</name>
      <url>https://opensource.org/licenses/MIT</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git://github.com/simter/simter-build.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/simter/simter-build.git</developerConnection>
    <url>https://github.com/simter/simter-build</url>
  </scm>
  <organization>
    <name>simter</name>
    <url>https://github.com/simter</url>
  </organization>
  <developers>
    <developer>
      <name>RJ.Hwang</name>
      <email>rongjihuang@gmail.com</email>
    </developer>
  </developers>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/simter/simter-build/issues</url>
  </issueManagement>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>compile</id>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>test-compile</id>
              <goals>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!-- Disable warnings -->
            <nowarn>true</nowarn>
            <!-- 1.6, 1.8, 9, 10, 11, 12 -->
            <jvmTarget>${java.version}</jvmTarget>
            <!-- 1.0, 1.1, 1.2, 1.3，1.4，1.5，1.6，1.7
            <languageVersion>1.3</languageVersion> -->
            <!-- 1.0, 1.1, 1.2, 1.3，1.4，1.5，1.6，1.7
            <apiVersion>1.3</apiVersion> -->
          </configuration>
          <dependencies>
            <!-- https://kotlinlang.org/docs/reference/compiler-plugins.html#all-open-compiler-plugin -->
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-allopen</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <!-- https://kotlinlang.org/docs/reference/compiler-plugins.html#no-arg-compiler-plugin -->
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-noarg</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <!-- https://github.com/Kotlin/kotlinx.serialization -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-serialization</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <charset>UTF-8</charset>
            <encoding>UTF-8</encoding>
            <docencoding>UTF-8</docencoding>
          </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jetbrains.dokka</groupId>
          <artifactId>dokka-maven-plugin</artifactId>
          <version>${dokka-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>pre-site</phase>
              <goals>
                <goal>dokka</goal>
              </goals>
              </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven-project-info-reports-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <includes>
              <include>**/*Test.java</include>
              <include>**/*Tests.java</include>
              <include>**/*Test.kt</include>
              <include>**/*Tests.kt</include>
            </includes>
          </configuration>
          <dependencies>
            <!-- junit-jupiter  -->
            <dependency>
              <groupId>org.junit.jupiter</groupId>
              <artifactId>junit-jupiter-engine</artifactId>
              <version>${junit-jupiter.version}</version>
            </dependency>
            <!-- allows junit-jupiter backward compatibility with junit4 or junit3  -->
            <dependency>
              <groupId>org.junit.vintage</groupId>
              <artifactId>junit-vintage-engine</artifactId>
              <version>${junit-jupiter.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven-gpg-plugin.version}</version>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <phase>verify</phase>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <executions>
            <execution>
              <id>enforce-rules</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.8.0</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>[17,)</version>
                  </requireJavaVersion>
                  <requireProperty>
                    <property>project.name</property>
                  </requireProperty>
                  <requireProperty>
                    <property>project.description</property>
                  </requireProperty>
                  <requireReleaseDeps>
                    <onlyWhenRelease>true</onlyWhenRelease>
                    <message>No Snapshots Allowed!</message>
                  </requireReleaseDeps>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>flatten</id>
              <phase>process-resources</phase>
              <goals>
                <goal>flatten</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}</outputDirectory>
                <flattenedPomFilename>flattened-pom.xml</flattenedPomFilename>
                <updatePomFile>true</updatePomFile>
                <flattenMode>oss</flattenMode>
                <pomElements>
                  <parent>resolve</parent>
                  <modules>remove</modules>
                  <properties>interpolate</properties>
                  <dependencyManagement>keep</dependencyManagement>
                  <dependencies>keep</dependencies>
                  <pluginManagement>keep</pluginManagement>
                  <name>resolve</name>
                  <description>resolve</description>
                  <profiles>remove</profiles>
                </pomElements>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <executions>
            <execution>
              <id>get-the-git-infos</id>
              <phase>process-sources</phase>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <verbose>false</verbose>
            <runOnlyOnce>true</runOnlyOnce>
            <failOnNoGitDirectory>false</failOnNoGitDirectory>
            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
            <generateGitPropertiesFile>true</generateGitPropertiesFile>
            <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
            </generateGitPropertiesFilename>
          </configuration>
        </plugin>
        <!-- spring-boot-maven-plugin -->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <!-- 
              https://docs.spring.io/spring-boot/docs/current/maven-plugin/run-mojo.html#fork
              https://github.com/spring-projects/spring-boot/issues/18948
              Since spring-boot-2.2.0, this property's default value change from 'false' to 'true'.
              And we met two probloms:
              1. It make IntelliJ IDEA debug break point unavilable.
              2. Stop spring-boot app but it keep running within IntelliJ IDEA when start with 
                 'mvn spring-boot:run'.
              The default value 'true' is suitable for 'spring-boot-devtools'.
              We set to 'false' because we don't need it.
              But we can use '-Dspring-boot.run.fork=false' to change it with command line param.
            -->
            <fork>false</fork>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
            <configuration>
              <pomElements>
                <profiles>keep</profiles>
              </pomElements>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <!-- deploy-lan: Configuration for deploy to LAN nexus repository -->
    <profile>
      <id>lan</id>
      <distributionManagement>
        <repository>
          <id>lan</id>
          <url>${lan-release-url}</url>
        </repository>
        <snapshotRepository>
          <id>lan</id>
          <url>${lan-snapshot-url}</url>
        </snapshotRepository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- deploy-sonatype: Configuration for deploy to Maven Central Repository -->
    <profile>
      <id>sonatype</id>
      <distributionManagement>
        <snapshotRepository>
          <id>sonatype</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
          <id>sonatype</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- deploy-bintray: Configuration for deploy java module to Simter Bintray Maven Repository -->
    <profile>
      <id>bintray</id>
      <distributionManagement>
        <repository>
          <id>bintray</id>
          <url>https://api.bintray.com/maven/simter/maven/${project.groupId}:${project.artifactId}/;publish=1</url>
        </repository>
        <snapshotRepository>
          <id>bintray</id>
          <url>https://api.bintray.com/maven/simter/maven/${project.groupId}:${project.artifactId}/;publish=1</url>
        </snapshotRepository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- deploy-bintray: Configuration for deploy kotlin module to Simter Bintray Maven Repository -->
    <profile>
      <id>bintray-kotlin</id>
      <distributionManagement>
        <repository>
          <id>bintray</id>
          <url>https://api.bintray.com/maven/simter/maven/${project.groupId}:${project.artifactId}/;publish=1</url>
        </repository>
        <snapshotRepository>
          <id>bintray</id>
          <url>https://api.bintray.com/maven/simter/maven/${project.groupId}:${project.artifactId}/;publish=1</url>
        </snapshotRepository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.jetbrains.dokka</groupId>
            <artifactId>dokka-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
